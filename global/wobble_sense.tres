[gd_resource type="ShaderMaterial" load_steps=4 format=3 uid="uid://dcf3p2j3frwt7"]

[sub_resource type="Shader" id="Shader_x1xju"]
code = "shader_type canvas_item;

uniform sampler2D flowMap; //Displacement map
uniform float strength;    //Force of the effect
uniform float speed;       //Speed of the effect
uniform int frames: hint_range(1, 10); //Frames of the effect


//Returns a value between 0 and 1 depending of the frames -> exemple: frames = 4, frame 1 = 0.25
float clock(float time){
	float fframes = float(frames);
	return floor(mod(time * speed, fframes)) / fframes;
}

void fragment(){
	float c = clock(TIME); //Get clock frame
	vec4 offset = texture(flowMap, vec2(UV.x + c, UV.y + c)) * strength; // Get offset 
	COLOR = texture(TEXTURE, vec2(UV.x, UV.y) + offset.xy - vec2(0.5, 0.5) * strength); // We need to remove the displacement 
	COLOR = vec4(COLOR.r, COLOR.b, COLOR.g, COLOR.a * 0.6);
}"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_50yw5"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_u53q8"]
noise = SubResource("FastNoiseLite_50yw5")

[resource]
shader = SubResource("Shader_x1xju")
shader_parameter/strength = 0.04
shader_parameter/speed = 4.0
shader_parameter/frames = 2
shader_parameter/flowMap = SubResource("NoiseTexture2D_u53q8")
